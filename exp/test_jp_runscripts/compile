#!/usr/bin/env bash
# Compiles the GFDLdryModel (tested on emps-gv2.ex.ac.uk)
#
# This compile script is a conversion of old csh to bash scripts taken
# from MoistModel runscript and GFDL compile_full_dynamics_on_workstation.csh
# script.
#
#
# 05.10.15 - James Penn <jp492@exeter.ac.uk>
# This is the minimal compile script. It has 3 tasks
# 1. Ensure that environment variables are set
# 2. Load the appropriate versions of tools and config via the `module` command
# 3. Compile the code into exec.<architecture>

# 1. Check that the GFDL_BASE environment variable has been set.
: ${GFDL_BASE?"GFDL_BASE location needs to be set."}

# 2. Setup an experiment name (this could be changed if jpheldsuarez directory is copied)
exp_name=test_jp_runscripts
exp_path=$GFDL_BASE/exp/$exp_name
#-----------------------------------------------------------------------------------------------------
hostname=`hostname`
platform=ia64                                       # A unique identifier for your platform
template=$GFDL_BASE/bin/mkmf.template.$platform     # path to template for your platform
mkmf=$GFDL_BASE/bin/mkmf                        # path to executable mkmf
sourcedir=$GFDL_BASE/src                             # path to directory containing model source code
pathnames=$GFDL_BASE/input/path_names                # path to file containing list of source paths
ppdir=$GFDL_BASE/postprocessing                  # path to directory containing the tool for combining distributed diagnostic output files
#-----------------------------------------------------------------------------------------------------
execdir=$exp_path/exec.$platform  # where code is compiled and executable is created
executable=$execdir/full_dynamics.x

netcdf_flags=`nf-config --fflags --flibs`

# 2. Load the necessary tools into the environment
source $GFDL_BASE/src/extra/loadmodule	
module list
ulimit -s unlimited # Set stack size to unlimited

#--------------------------------------------------------------------------------------------------------
# compile combine tool
cd $ppdir
cc -O -c `nf-config --cflags` mppnccombine.c
if [ $? != 0 ]; then
	exit 1
fi
cc -O -o mppnccombine.x `nf-config --libs`  mppnccombine.o
if [ $? != 0 ]; then
	exit 1
fi
#--------------------------------------------------------------------------------------------------------


#--------------------------------------------------------------------------------------------------------
# setup directory structure
if [ ! -d $execdir ]; then
	echo "Creating exec directory $execdir"
	mkdir -p $execdir
fi
cd $execdir

# execute mkmf to create makefile
cppDefs="-Duse_libMPI -Duse_netCDF -Duse_LARGEFILE -DINTERNAL_FILE_NML -DOVERLOAD_C8"
$mkmf -a $sourcedir -t $template -p `basename $executable` -c "$cppDefs" $pathnames $sourcedir/shared/include $sourcedir/shared/mpp/include
if [ $? != 0 ]; then
   echo "ERROR: mkmf failed for full_dynamics" 
   exit 1
fi

# --- execute make ---
make `basename $executable`
if [ $? != 0 ]; then
   unset echo
   echo "ERROR: make failed for full_dynamics" 
   exit 1
fi
